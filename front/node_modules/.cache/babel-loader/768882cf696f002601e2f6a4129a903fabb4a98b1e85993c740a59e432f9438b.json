{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Users\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (3)\\\\React HW04 Recipes\\\\front\\\\src\\\\components\\\\Recipelist.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeList = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Получаем ID рецепта из URL\n  const [recipe, setRecipe] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/api/recipes/${id}`);\n        setRecipe(response.data); // Предполагается, что API возвращает один объект рецепта\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRecipe();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this);\n  }\n  if (!recipe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0420\\u0435\\u0446\\u0435\\u043F\\u0442 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"category\",\n      children: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-column\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          whiteSpace: \"pre-line\"\n        },\n        children: recipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-info\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/categories\",\n        children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\\u043C \\u0431\\u043B\\u044E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n_s(RecipeList, \"Mlbof7TxLnZ/ZZkojbzJzibE3gE=\", false, function () {\n  return [useParams];\n});\n_c = RecipeList;\nexport default RecipeList;\nvar _c;\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"names":["axios","React","useEffect","useState","Link","useParams","jsxDEV","_jsxDEV","RecipeList","_s","id","recipe","setRecipe","loading","setLoading","error","setError","fetchRecipe","response","get","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","style","whiteSpace","description","type","class","to","_c","$RefreshReg$"],"sources":["C:/Users/Users/Desktop/Новая папка (3)/React HW04 Recipes/front/src/components/Recipelist.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst RecipeList = () => {\r\n    const { id } = useParams(); // Получаем ID рецепта из URL\r\n        const [recipe, setRecipe] = useState(null);\r\n        const [loading, setLoading] = useState(true);\r\n        const [error, setError] = useState(null);\r\n\r\n        useEffect(() => {\r\n            const fetchRecipe = async () => {\r\n                try {\r\n                    const response = await axios.get(\r\n                        `http://127.0.0.1:8000/api/recipes/${id}`\r\n                    );\r\n                    setRecipe(response.data); // Предполагается, что API возвращает один объект рецепта\r\n                } catch (error) {\r\n                    setError(error.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            };\r\n\r\n            fetchRecipe();\r\n        }, [id]);\r\n\r\n        if (loading) {\r\n            return <div>Загрузка...</div>;\r\n        }\r\n\r\n        if (error) {\r\n            return <div>Ошибка: {error}</div>;\r\n        }\r\n\r\n        if (!recipe) {\r\n            return <div>Рецепт не найден</div>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1 className='category'>{recipe.name}</h1>\r\n                    <div className=\"centered-column\">\r\n                    <span style={{ whiteSpace: \"pre-line\" }}>{recipe.description}</span>\r\n                </div> \r\n                 \r\n                <button type=\"button\" class=\"btn btn-info\">\r\n      <Link to=\"/categories\">Перейти к категориям блюд</Link>\r\n                </button>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default RecipeList;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}